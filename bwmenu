#!/bin/bash
# Rofi extension for BitWarden-cli

# File to store the BitWarden session in
BW_HASH_FILE=~/.bwhash

# Holds the available items in memory
ITEMS=

# Stores which command will be used to deal with clipboards
CLIPBOARD_MODE=

# source the hash file to gain access to the BitWarden CLI
# Pre fetch all the items
load_items() {
  # shellcheck disable=SC1090
  source "$BW_HASH_FILE"
  if ! ITEMS=$(bw list items 2>/dev/null); then
    mpw=$(rofi -dmenu -p "Master Password" -password) || exit $?
    bw unlock "$mpw" | grep -e 'export.*=="' -o > $BW_HASH_FILE || {
      exit_error 1 "Failed to unlock BitWarden.
Please try again."
    }
    load_items
  fi
}

exit_error() {
  local code="$1"
  local message="$2"

  rofi -e "$message"
  exit "$code"
}

# Show the Rofi menu with options
# Reads items from stdin
rofi_menu() {
  rofi -dmenu -p 'Name' \
    -i -no-custom \
    -mesg ' <b>Alt+r</b>: sync | <b>Alt+u</b>: urls | <b>Alt+n</b>: names | <b>Alt+c</b>: folders' \
    -kb-custom-1 alt+r \
    -kb-custom-2 alt+n \
    -kb-custom-3 alt+u \
    -kb-custom-4 alt+c

}

# Show items in a rofi menu by name of the item
show_items() {
  if item=$(
    echo "$ITEMS" \
    | jq -r ".[] | select( has( \"login\" ) ) | .name" \
    | rofi_menu
  ); then
    item=$(echo "$ITEMS" | jq -r ".[] | select(.name == \"$item\")")
    show_password "$item"
  else
    on_rofi_exit $?
  fi
}

# Show items in a rofi menu by url of the item
# if url occurs in multiple items, show the menu again with those items only
show_urls() {
  if url=$(
    echo "$ITEMS" \
    | jq -r '.[] | select(has("login")) | .login | select(has("uris")).uris | .[].uri' \
    | rofi_menu
  ); then
    ITEMS=$(bw list items --url "$url")
    if [[ $(echo "$ITEMS" | jq -r 'length') -gt 1 ]]; then
      show_items
    else
      item=$(echo "$ITEMS" | jq -r '.[0]')
      show_password "$item"
    fi
  else
    on_rofi_exit $?
  fi
}

show_folders() {
  folders=$(bw list folders)
  if ! folder=$(echo "$folders" | jq -r '.[] | .name' | rofi_menu); then
    on_rofi_exit $?
  fi

  folder_id=$(echo "$folders" | jq -r ".[] | select(.name == \"$folder\").id")

  ITEMS=$(bw list items --folderid "$folder_id")
  show_items
}

# re-sync the BitWarden items with the server
sync_bitwarden() {
  bw sync &>/dev/null || exit_error 1 "Failed to sync bitwarden"

  load_items
  show_items
}

# Evaluate the rofi exit codes
on_rofi_exit() {
  case "$1" in
    10) sync_bitwarden;;
    11) load_items; show_items;;
    12) show_urls;;
    13) show_folders;;
    *) exit "$1";;
  esac
}

# Set $CLIPBOARD_MODE to a command that will put stdin into the clipboard.
select_copy_command() {
  if hash xclip 2>/dev/null; then
    CLIPBOARD_MODE=xclip
  elif hash xsel 2>/dev/null; then
    CLIPBOARD_MODE=xsel
  else
    exit_error 1 "No clipboard command found. Please install either xclip or xsel."
  fi
}

clipboard-set() {
  clipboard-${CLIPBOARD_MODE}-set
}

clipboard-get() {
  clipboard-${CLIPBOARD_MODE}-get
}

clipboard-clear() {
  clipboard-${CLIPBOARD_MODE}-clear
}

clipboard-xclip-set() {
    xclip -selection clipboard -r
}

clipboard-xclip-get() {
    xclip -selection clipboard -o
}

clipboard-xclip-clear() {
    echo -n "" | xclip -selection clipboard -r
}

clipboard-xsel-set() {
  xsel --clipboard --input
}

clipboard-xsel-get() {
  xsel --clipboard
}

clipboard-xsel-clear() {
  xsel --clipboard --delete
}

# Output the password
# copy to clipboard and give the user feedback that the password is copied
# $1: json item
show_password() {
  pass=$(echo "$1" | jq -r '.login.password')

  # send a notification for 5 seconds (-t 5000)
  # not sure if icon will be present everywhere, /usr/share/icons is default icon location
  notify-send "<b>$(echo "$1" | jq -r '.name')</b> copied" "${pass:0:4}****" -t 5000  -i /usr/share/icons/hicolor/64x64/apps/bitwarden.png
  echo -n "$pass" | clipboard-set

  sleep 5
  if [[ "$(clipboard-get)" == "$pass" ]]; then
    clipboard-clear
  fi
}

if ! [ -f $BW_HASH_FILE ]; then
  touch $BW_HASH_FILE
  chmod 600 $BW_HASH_FILE
fi

select_copy_command
load_items
show_items
